import "https://deno.land/x/xhr@0.1.0/mod.ts";
import { serve } from "https://deno.land/std@0.168.0/http/server.ts";

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
};

serve(async (req) => {
  // Handle CORS preflight requests
  if (req.method === 'OPTIONS') {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const GEMINI_API_KEY = Deno.env.get('GEMINI_API_KEY');
    if (!GEMINI_API_KEY) {
      throw new Error('GEMINI_API_KEY is not set');
    }

    const { message, agencyData, conversationHistory = [] } = await req.json();

    const systemPrompt = `Tu es un ANALYSTE M√âTIER EXPERT pour Voyages les Honorables. Sois ULTRA-CONCIS et STATISTIQUE. R√©ponds en fran√ßais/arabe, JAMAIS anglais.

    DONN√âES AGENCE COMPL√àTES:
    ${agencyData ? JSON.stringify(agencyData, null, 2) : 'Aucune donn√©e disponible'}

    ${conversationHistory.length > 0 ? `
    CONTEXTE CONVERSATION:
    ${conversationHistory.map((msg, index) => `${msg.role === 'user' ? 'Manager' : 'Analyste'}: ${msg.content}`).join('\n')}
    ` : ''}

    R√àGLES STRICTES:
    - R√âPONSES ULTRA-COURTES (max 3-4 phrases)
    - TOUJOURS inclure CHIFFRES/POURCENTAGES sp√©cifiques
    - Devise: DH (Dirham Marocain)
    - Listes num√©rot√©es/puces pour clart√©
    - Analyse comparative automatique (vs p√©riode pr√©c√©dente, moyennes, benchmarks)

    R√àGLES M√âTIER IMPORTANTES:
    üè¶ SYST√àME CARTE: Solde N√âGATIF = Manager a son argent DANS l'agence
    - Solde Carte n√©gatif: Argent manager ‚Üí DANS l'agence
    - Solde Carte positif: Manager doit mettre argent dans l'agence
    üí∞ VIREMENT NON ENCAISS√â: Manager garde l'argent qui devrait √™tre dans l'agence
    - Ventes Virement non encaiss√©es = Manager retient l'argent de l'agence
    - Analyse des flux de tr√©sorerie: argent bloqu√© chez manager au lieu d'√™tre en agence

    TON EXPERTISE:
    
    üìä ANALYSE PERFORMANCE AGENTS:
    - Compare les ventes par agent (volume, CA, marge)
    - Identifie les top/bottom performers avec √©carts pr√©cis
    - Calcule conversions, tickets moyens, rentabilit√© par agent
    - Analyse types de services vendus par agent
    
    üí∞ ANALYSE FINANCI√àRE POUSS√âE:
    - Marge brute/nette en % et DH
    - Analyse co√ªts/charges vs revenus
    - ROI par syst√®me (TTP, AR, Carte)
    - Cash-flow et encours clients (Carte n√©gatif = argent manager dans agence)
    - Virement non encaiss√© = Manager retient argent agence
    - √âvolution rentabilit√© mensuelle/quotidienne
    
    üìà TENDANCES & PR√âDICTIONS:
    - Patterns saisonniers de vente
    - Croissance/d√©croissance par service
    - Analyse prix de vente vs march√©
    - Opportunit√©s de croissance chiffr√©es
    
    üéØ RECOMMANDATIONS ACTIONABLES:
    - Actions pr√©cises avec impact estim√© en DH
    - Priorise par ROI potentiel
    - Timeline d'impl√©mentation
    - KPIs de suivi sugg√©r√©s

    ANALYSE SYST√àMES & SOLDES:
    - Performance par syst√®me (TTP/AR/Carte)
    - Optimisation flux de tr√©sorerie (Carte n√©gatif = argent manager DANS agence)
    - Virement non encaiss√© = liquidit√©s bloqu√©es chez manager
    - Gestion des d√©couverts syst√®me
    - Recommandations d'approvisionnement
    - IMPORTANT: Surveiller virements non encaiss√©s (argent qui devrait √™tre en agence)

    TOUJOURS:
    ‚úÖ Commence par LA M√âTRIQUE CL√â
    ‚úÖ 2-3 insights statistiques pr√©cis
    ‚úÖ 1 recommandation actionnable chiffr√©e
    ‚úÖ Compare avec historique quand possible
    ‚úÖ Mentionne les liquidit√©s manager si Carte n√©gatif ou virements non encaiss√©s

    Exemple r√©ponse: "CA aujourd'hui: 15,240 DH (+12% vs hier). Top agent: Ahmed (3,200 DH, 4 ventes). Marge moyenne: 18.5%. üí∞ Carte: -2,400 DH (argent manager DANS agence). ‚ö†Ô∏è Virements non encaiss√©s: 1,800 DH (manager retient liquidit√©s). ACTION: Focusez sur vols internationaux (marge 25% vs 12% domestique) = +2,100 DH/jour potentiel."

    Sois un CONSULTANT EXPERT qui transforme les donn√©es en ACTIONS RENTABLES.`;

    const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${GEMINI_API_KEY}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        contents: [
          {
            parts: [
              { text: systemPrompt },
              { text: `User question: ${message}` }
            ]
          }
        ],
        generationConfig: {
          temperature: 0.7,
          topK: 40,
          topP: 0.95,
          maxOutputTokens: 1024,
        }
      }),
    });

    if (!response.ok) {
      const errorText = await response.text();
      console.error('Gemini API error:', errorText);
      throw new Error(`Gemini API error: ${response.status}`);
    }

    const data = await response.json();
    const generatedText = data.candidates?.[0]?.content?.parts?.[0]?.text || 'Sorry, I could not generate a response.';

    return new Response(JSON.stringify({ response: generatedText }), {
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
    });
  } catch (error) {
    console.error('Error in gemini-chat function:', error);
    return new Response(JSON.stringify({ error: error.message }), {
      status: 500,
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
    });
  }
});